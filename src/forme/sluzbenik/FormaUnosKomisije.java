/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.sluzbenik;

import forme.sluzbenik.FormaZaSluzbenika;

import domen.Clan;
import domen.Komisija;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import jdk.nashorn.internal.ir.BreakNode;
import komunikacija.KomunikacijaSaServerom;
import konstante.Operacije;

import modeli.ModelTabeleKomisija;
import transfer.KlijentskiZahtev;
import transfer.ServerskiOdgovor;

/**
 *
 * @author PC
 */
public class FormaUnosKomisije extends javax.swing.JFrame {

    /**
     * Creates new form FormaUnosKomisije
     */
    public FormaUnosKomisije() {
        initComponents();
        popuniKomboBox1();
        Toolkit tk = Toolkit.getDefaultToolkit();
        int x = (int) tk.getScreenSize().getWidth();
        int y = (int) tk.getScreenSize().getHeight();
        vratiKomiijaID();
        setSize(x, y);
        srediTabelu();
        txtIDkom.setEnabled(false);
        btnPromeni.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        btnMinus = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaClanova = new javax.swing.JTable();
        btnUnesiKomisiju = new javax.swing.JButton();
        btnPlus = new javax.swing.JButton();
        btnGlavni = new javax.swing.JButton();
        btnPromeni = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtIDkom = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtUsernameKom = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPassKom = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Unos nove komisije");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(null);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Molimo unesite clanove:");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(240, 250, 210, 17);

        btnMinus.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnMinus.setForeground(new java.awt.Color(102, 102, 102));
        btnMinus.setText("Izbaci clana");
        btnMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinusActionPerformed(evt);
            }
        });
        jPanel1.add(btnMinus);
        btnMinus.setBounds(920, 240, 142, 40);

        tabelaClanova.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaClanova);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(260, 300, 800, 200);

        btnUnesiKomisiju.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnUnesiKomisiju.setForeground(new java.awt.Color(102, 102, 102));
        btnUnesiKomisiju.setText("Unesi komisiju");
        btnUnesiKomisiju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnesiKomisijuActionPerformed(evt);
            }
        });
        jPanel1.add(btnUnesiKomisiju);
        btnUnesiKomisiju.setBounds(890, 560, 170, 40);

        btnPlus.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnPlus.setForeground(new java.awt.Color(102, 102, 102));
        btnPlus.setText("Dodaj clana");
        btnPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlusActionPerformed(evt);
            }
        });
        jPanel1.add(btnPlus);
        btnPlus.setBounds(690, 230, 142, 40);

        btnGlavni.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnGlavni.setForeground(new java.awt.Color(102, 102, 102));
        btnGlavni.setText("Izadji");
        btnGlavni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGlavniActionPerformed(evt);
            }
        });
        jPanel1.add(btnGlavni);
        btnGlavni.setBounds(920, 20, 140, 40);

        btnPromeni.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnPromeni.setForeground(new java.awt.Color(102, 102, 102));
        btnPromeni.setText("Promeni komisiju");
        btnPromeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPromeniActionPerformed(evt);
            }
        });
        jPanel1.add(btnPromeni);
        btnPromeni.setBounds(610, 560, 167, 40);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Unos komisije"));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("ID nove komisije:");

        txtIDkom.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtIDkom.setForeground(new java.awt.Color(102, 102, 102));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Username:");

        txtUsernameKom.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtUsernameKom.setForeground(new java.awt.Color(102, 102, 102));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Password:");

        txtPassKom.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPassKom.setForeground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(48, 48, 48)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtIDkom, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)
                    .addComponent(txtUsernameKom)
                    .addComponent(txtPassKom))
                .addGap(26, 26, 26))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIDkom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtUsernameKom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPassKom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(260, 80, 800, 150);

        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Mladenovic_Marija_42014\\MojaAplikacijaKlijentt\\src\\images\\s1.jpg")); // NOI18N
        jPanel1.add(jLabel4);
        jLabel4.setBounds(0, 4, 1450, 800);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUnesiKomisijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnesiKomisijuActionPerformed
        // TODO add your handling code here:
        ModelTabeleKomisija mtk = (ModelTabeleKomisija) tabelaClanova.getModel();
        ArrayList<Clan> listaC = (ArrayList<Clan>) mtk.getClanovi();
        String id = txtIDkom.getText();
        
        String username = txtUsernameKom.getText();
        String pass = txtPassKom.getText();
        if(id.isEmpty() || username.isEmpty() || pass.isEmpty() || listaC==null) {
             JOptionPane.showMessageDialog(this, "Niste uneli sve podatke!");
             return;
        }
        if(listaC.size()<2){
             JOptionPane.showMessageDialog(this, "Morate uneti bar 2 clana komisije!");
                     return;
        }
        
        
        int komID = Integer.parseInt(id);
        Komisija kom = new Komisija(komID, username, pass, listaC);
        KlijentskiZahtev kz = new KlijentskiZahtev(Operacije.UNOS_KOMISIJE, kom);
        KomunikacijaSaServerom.getInstance().posaljiKZ(kz);
        ServerskiOdgovor so = KomunikacijaSaServerom.getInstance().prihvatiSO();
        
         if(so.getOdgovor().equals("!")) {
            JOptionPane.showMessageDialog(this,so.getPoruka());
        } else {
        JOptionPane.showMessageDialog(this,so.getPoruka());
        }

    }//GEN-LAST:event_btnUnesiKomisijuActionPerformed

    private void btnMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinusActionPerformed
        ModelTabeleKomisija mtk = (ModelTabeleKomisija) tabelaClanova.getModel();
        int red = tabelaClanova.getSelectedRow();
        if(red==-1) {
            JOptionPane.showMessageDialog(this, "Morate da izaberete red!");
            return;
        }
        mtk.obrisiKomisiju(red);
    }//GEN-LAST:event_btnMinusActionPerformed

    private void btnPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlusActionPerformed
         FormaZaUnosClanova fzc = new FormaZaUnosClanova(this, true);
        fzc.setVisible(true);
    }//GEN-LAST:event_btnPlusActionPerformed

    private void btnGlavniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGlavniActionPerformed
       FormaZaSluzbenika fzs = new FormaZaSluzbenika();
       
       fzs.setVisible(true);
       this.setVisible(false);
    }//GEN-LAST:event_btnGlavniActionPerformed

    private void btnPromeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPromeniActionPerformed
         ModelTabeleKomisija mtk = (ModelTabeleKomisija) tabelaClanova.getModel();
        ArrayList<Clan> listaC = (ArrayList<Clan>) mtk.getClanovi();
        
        for (int i = 0; i < listaC.size()-1; i++) {
            for (int j = i+1; j < listaC.size(); j++) {
                if(listaC.get(i).equals(listaC.get(j))) {
                     JOptionPane.showMessageDialog(this, "Uneli ste istog clana dva puta!");
                     return;
                }
                
            }
            
        }
        String id = txtIDkom.getText();
        int komID = Integer.parseInt(id);
        String username = txtUsernameKom.getText();
        String pass = txtPassKom.getText();
        if(id.isEmpty() || username.isEmpty() || pass.isEmpty() || listaC==null) {
             JOptionPane.showMessageDialog(this, "Niste uneli sve podatke!");
             return;
        }
        Komisija kom = new Komisija(komID, username, pass, listaC);
         KlijentskiZahtev kz = new KlijentskiZahtev(Operacije.IZMENA_KOMISIJE, kom);
        KomunikacijaSaServerom.getInstance().posaljiKZ(kz);
        ServerskiOdgovor so = KomunikacijaSaServerom.getInstance().prihvatiSO();
        
        
         if(so.getOdgovor().equals("!")) {
            JOptionPane.showMessageDialog(this,so.getPoruka() );
        } else {
        JOptionPane.showMessageDialog(this, so.getPoruka());
        }
    }//GEN-LAST:event_btnPromeniActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormaUnosKomisije.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormaUnosKomisije.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormaUnosKomisije.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormaUnosKomisije.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormaUnosKomisije().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGlavni;
    private javax.swing.JButton btnMinus;
    private javax.swing.JButton btnPlus;
    private javax.swing.JButton btnPromeni;
    private javax.swing.JButton btnUnesiKomisiju;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaClanova;
    private javax.swing.JTextField txtIDkom;
    private javax.swing.JTextField txtPassKom;
    private javax.swing.JTextField txtUsernameKom;
    // End of variables declaration//GEN-END:variables

    private void popuniKomboBox1() {
//        List<Clan> listaclanova = Kontroler.getInstance().vratiClanove();
//        cmbPrviClan.removeAllItems();
//        cmbDrugiClan.removeAllItems();
//        cmbTreciClan.removeAllItems();
//        for (Clan clan : listaclanova) {
//            cmbPrviClan.addItem(clan);
//        }
//        
//        
//        for (Clan clan : listaclanova) {
//            
//                cmbDrugiClan.addItem(clan);
//            
//        }
//         
//         for (Clan clan : listaclanova) {
//            
//                cmbTreciClan.addItem(clan);
//            
//        }
    }

    private void srediTabelu() {
        ModelTabeleKomisija mtk = new ModelTabeleKomisija();
        tabelaClanova.setModel(mtk);
    }

    void dodajClana(Clan clan) {
        ModelTabeleKomisija mtk = (ModelTabeleKomisija) tabelaClanova.getModel();
        mtk.dodajClana(clan);

    }

    void srediFormu(Komisija kom) {
        txtIDkom.setText(kom.getKomisijaID()+"");
        txtUsernameKom.setText(kom.getUsername());
        txtPassKom.setText(kom.getPassword());
        ArrayList<Clan> lic=(ArrayList<Clan>) kom.getListaClanova();
        ModelTabeleKomisija mtk = new  ModelTabeleKomisija();
        tabelaClanova.setModel(mtk);
        for (Clan clan : lic) {
            mtk.dodajClana(clan);
        }
    }

    void srediDugme() {
      btnPromeni.setVisible(true);
      btnUnesiKomisiju.setVisible(false);
      
    }

    private void vratiKomiijaID() {
        KlijentskiZahtev kz = new KlijentskiZahtev(Operacije.VRATI_MAX_ID_KOMISIJA, null);
        KomunikacijaSaServerom.getInstance().posaljiKZ(kz);
        ServerskiOdgovor so = KomunikacijaSaServerom.getInstance().prihvatiSO();
        txtIDkom.setText(so.getOdgovor()+"");
    }

    ArrayList<Clan> vratiList() {
       ModelTabeleKomisija mtk = (ModelTabeleKomisija) tabelaClanova.getModel();
       ArrayList<Clan> lc = (ArrayList<Clan>) mtk.getClanovi();
       return lc;
    }

}
